{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "type": "object",
  "required": [ "strategies" ],
  "properties": {
    "riskReportUrl": {
      "type": "string",
      "format": "uri",
      "description": "This should link to a Google Sheets page with all strategies' risk report card details."
    },
    "strategies": {
      "type": "array",
      "items": {
        "type": "object",
        "required": [ "id", "name", "platform", "category", "type", "link", "lockDuration", "riskLevel", "startDateTimeUtc", "unlisted", "disabled", "depositDenoms", "positionDenoms", "rewardDenoms", "tags" ],
        "properties": {
          "id": {
            "type": "string",
            "description": "A unique identifier for the strategy. If the data endpoints for this strategy expect an identifying parameter, this should be exactly that argument."
          },
          "name": {
            "type": "string",
            "description": "The display name for the strategy. Must be unique, but can be changed later if needed."
          },
          "platform": {
            "type": "string",
            "description": "The platform that provides the Earn Strategy.",
            "example": "Levana"
          },
          "category": {
            "type": "string",
            "enum": [
              "Lending",
              "Liquid Staking",
              "Staking",
              "Perps LP",
              "LP (Vault)"
            ],
            "description": "Specify the most appropriate broad category that the earn strategies would be classified."
          },
          "type": {
            "type": "string",
            "description": "Further classification of the strategy.",
            "example": "Osmosis Staking"
          },
          "link": {
            "type": "string",
            "format": "uri",
            "pattern": "^https:\/\/.*$",
            "description": "This link redirects users to the most appropriate interface for users participate in the strategy."
          },
          "contract": {
            "type": "string",
            "pattern": "^[a-zA-Z0-9/]+$",
            "description": "The primary contract for the strategy. Is there are multiple contracts, provide only the contract with which participants interact."
          },
          "tvl": {
            "type": "string",
            "format": "uri",
            "oneOf": [
              {
                "type": "string",
                "pattern": "^https:\/\/.*$"
              },
              {
                "type": "string",
                "maxLength": 0
              }
            ],
            "description": "A URL to the data endpoint for the Total Value Locked (TVL) of the strategy. The response must match how it's defined in the documentation."
          },
          "apr": {
            "type": "string",
            "format": "uri",
            "oneOf": [
              {
                "type": "string",
                "pattern": "^https:\/\/.*$"
              },
              {
                "type": "string",
                "maxLength": 0
              }
            ],
            "description": "A URL to the data endpoint for the Annual Percentage Rate (APR) of the strategy. The response must match how it's defined in the documentation."
          },
          "geoblock": {
            "type": "string",
            "format": "uri",
            "oneOf": [
              {
                "type": "string",
                "pattern": "^https:\/\/.*$"
              },
              {
                "type": "string",
                "maxLength": 0
              }
            ],
            "description": "A URL to the data endpoint for a list of regions that are geographically restricted by the primany interface provider. The response must match how it's defined in the documentation."
          },
          "lockDuration": {
            "type": "string",
            "pattern": "^P(?:\\d+Y)?(?:\\d+M)?(?:\\d+D)?(?:T(?:\\d+H)?(?:\\d+M)?(?:\\d+S)?)?$",
            "example": "P14D",
            "description": "specify the duration following ISO 8601 standard. If the strategy does not require a lock, use 'P0S' (meaning zero seconds)."
          },
          "riskLevel": {
            "type": "number",
            "minimum": 0,
            "maximum": 1,
            "description": "Determined by the risk report card, and feeds the interface's risk level indicator."
          },
          "startDateTimeUtc": {
            "type": "string",
            "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}Z)?$",
            "example": "2049-01-01T01:01:01Z",
            "description": "The start date and time (UTC) of a strategy not only keeps record, but can be used to pre-plan and exact time to reveal the on the interface."
          },
          "unlisted": {
            "type": "boolean",
            "description": "A value of TRUE will hide the strategy on the interface."
          },
          "disabled": {
            "type": "boolean",
            "description": "A value of TRUE will disable interaction with the strategy via the interface."
          },
          "message": {
            "type": "string",
            "description": "Will display on the interface to communicate an important note about the strategy."
          },
          "tokenDenoms": {
            "type": "array",
            "description": "Describes all assets needed to participate in the strategy.",
            "items": { "$ref": "#/$defs/denomObject" }
          },
          "depositDenoms": {
            "type": "array",
            "description": "Describes all deposited assets needed to participate in the strategy.",
            "items": { "$ref": "#/$defs/denomObject" }
          },
          "positionDenoms": {
            "type": "array",
            "description": "Describes all assets representing a position in the strategy.",
            "items": { "$ref": "#/$defs/denomObject" }
          },
          "rewardDenoms": {
            "type": "array",
            "description": "Describes the assets earned/rewarded for participating in the strategy. This list should include the majority of the earnings, but does not have to be exhaustive.",
            "items": { "$ref": "#/$defs/denomObject" }
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [ "Correlated", "Blue Chip", "Stablecoins" ]
            }
          }
        }
      }
    }
  },
  "$defs": {
    "denomObject": {
      "type": "object",
      "required": [ "coinMinimalDenom" ],
      "properties": {
        "coinMinimalDenom": {
          "type": "string",
          "description": "The base denom that represents the asset when on Osmosis. E.g., ATOM is 'ibc/27...'--NOT 'uatom'."
        },
        "_comment": {
          "type": "string",
          "description": "An unrestricted, informal field to informs human readers which asset is being described. Asset symbol is likely best.",
          "example": "$ATOM from Cosmos Hub via IBC (transfer/channel-0)"
        }
      }
    }
  }
}
